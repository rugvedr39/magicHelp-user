{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nexport class TakeHelpComponent {\n  constructor(http) {\n    this.http = http;\n    this.transactions = [];\n    this.selectedLevelData = null;\n  }\n  ngOnInit() {\n    this.fetchTransactions();\n  }\n  fetchTransactions() {\n    const payerId = localStorage.getItem('_id');\n    if (!payerId) {\n      console.error('PayerId not found in localStorage');\n      return;\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n    this.http.get(`${environment.apiUrl}/payments/getMatrixSummary/${payerId}`, {\n      headers\n    }).subscribe(response => {\n      this.transactions = response;\n      console.log(response);\n    }, error => {\n      console.error('Error fetching transactions:', error);\n    });\n  }\n  selectLevel(level) {\n    this.selectedLevelData = level;\n  }\n}","map":{"version":3,"names":["HttpHeaders","environment","TakeHelpComponent","constructor","http","transactions","selectedLevelData","ngOnInit","fetchTransactions","payerId","localStorage","getItem","console","error","headers","get","apiUrl","subscribe","response","log","selectLevel","level"],"sources":["/Users/rugvedraikwar/Desktop/magicHelp/mlm-froentend/mlm-frontend/src/app/take-help/take-help.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-take-help',\n  templateUrl: './take-help.component.html',\n  styleUrls: ['./take-help.component.css']\n})\n\ninterface LevelSummary {\n  totalPeople: number;\n  paidPeople: number;\n  openPeople: number;\n  levelStatus: string;\n}\n\n\nexport class TakeHelpComponent implements OnInit{\n  transactions: any[]=[];\n  selectedLevelData: any = null;\n\n  \n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchTransactions();\n  }\n\n  fetchTransactions(): void {\n    const payerId = localStorage.getItem('_id');\n    if (!payerId) {\n      console.error('PayerId not found in localStorage');\n      return;\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n\n\n    this.http.get<any[]>(`${environment.apiUrl}/payments/getMatrixSummary/${payerId}`, { headers })\n      .subscribe(\n        response => {\n          this.transactions = response;\n          console.log(response);\n        },\n        error => {\n          console.error('Error fetching transactions:', error);\n        }\n      );\n  }\n\n  selectLevel(level: any): void {\n    this.selectedLevelData = level;\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,8BAA8B;AAgB1D,OAAM,MAAOC,iBAAiB;EAM5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,iBAAiB,GAAQ,IAAI;EAIU;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,IAAI,CAACF,OAAO,EAAE;MACZG,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;MAClD;;IAGF,MAAMC,OAAO,GAAG,IAAId,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;KACzD,CAAC;IAGF,IAAI,CAACP,IAAI,CAACW,GAAG,CAAQ,GAAGd,WAAW,CAACe,MAAM,8BAA8BP,OAAO,EAAE,EAAE;MAAEK;IAAO,CAAE,CAAC,CAC5FG,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAACb,YAAY,GAAGa,QAAQ;MAC5BN,OAAO,CAACO,GAAG,CAACD,QAAQ,CAAC;IACvB,CAAC,EACDL,KAAK,IAAG;MACND,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACL;EAEAO,WAAWA,CAACC,KAAU;IACpB,IAAI,CAACf,iBAAiB,GAAGe,KAAK;EAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}