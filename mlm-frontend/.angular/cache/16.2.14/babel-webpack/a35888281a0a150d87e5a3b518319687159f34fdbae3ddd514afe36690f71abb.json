{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PmfComponent {\n  constructor(http) {\n    this.http = http;\n    this.levelDetails = [];\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.loading = false;\n    this.endOfData = false;\n  }\n  ngOnInit() {\n    this.levelData = history.state.levelData;\n    this.fetchLevelDetails();\n  }\n  onScroll() {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight && !this.loading && !this.endOfData) {\n      this.currentPage++;\n      this.fetchLevelDetails();\n    }\n  }\n  fetchLevelDetails() {\n    if (this.loading) {\n      return;\n    }\n    const payerId = localStorage.getItem('_id');\n    if (!payerId) {\n      console.error('PayerId not found in localStorage');\n      return;\n    }\n    this.loading = true;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n    this.http.get(`${environment.apiUrl}/payments/getTransactionsPMF/${payerId}?page=${this.currentPage}&limit=${this.itemsPerPage}`, {\n      headers\n    }).subscribe(response => {\n      this.levelDetails = [...this.levelDetails, ...response.transactions];\n      if (response.currentPage >= response.totalPages) {\n        this.endOfData = true;\n      }\n      this.loading = false;\n    }, error => {\n      console.error('Error fetching matrix summary:', error);\n      this.loading = false;\n    });\n  }\n  openModal(transactionId) {\n    // Implement modal opening logic\n    console.log(`Open modal for transaction: ${transactionId}`);\n  }\n  static #_ = this.ɵfac = function PmfComponent_Factory(t) {\n    return new (t || PmfComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PmfComponent,\n    selectors: [[\"app-pmf\"]],\n    hostBindings: function PmfComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function PmfComponent_scroll_HostBindingHandler($event) {\n          return ctx.onScroll($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function PmfComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"pmf works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","environment","PmfComponent","constructor","http","levelDetails","currentPage","itemsPerPage","loading","endOfData","ngOnInit","levelData","history","state","fetchLevelDetails","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","payerId","localStorage","getItem","console","error","headers","get","apiUrl","subscribe","response","transactions","totalPages","openModal","transactionId","log","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","hostBindings","PmfComponent_HostBindings","rf","ctx","$event","ɵɵresolveWindow","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/rugvedraikwar/Desktop/magicHelp/mlm-froentend/mlm-frontend/src/app/pmf/pmf.component.ts","/Users/rugvedraikwar/Desktop/magicHelp/mlm-froentend/mlm-frontend/src/app/pmf/pmf.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, HostListener } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-pmf',\n  templateUrl: './pmf.component.html',\n  styleUrls: ['./pmf.component.css']\n})\nexport class PmfComponent implements OnInit {\n  levelData: any;\n  levelDetails: any[] = [];\n  currentPage = 1;\n  itemsPerPage = 10;\n  loading = false;\n  endOfData = false;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.levelData = history.state.levelData;\n    this.fetchLevelDetails();\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll(): void {\n    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight && !this.loading && !this.endOfData) {\n      this.currentPage++;\n      this.fetchLevelDetails();\n    }\n  }\n\n  fetchLevelDetails(): void {\n    if (this.loading) {\n      return;\n    }\n\n    const payerId = localStorage.getItem('_id');\n    if (!payerId) {\n      console.error('PayerId not found in localStorage');\n      return;\n    }\n\n    this.loading = true;\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n\n    this.http.get<any>(`${environment.apiUrl}/payments/getTransactionsPMF/${payerId}?page=${this.currentPage}&limit=${this.itemsPerPage}`, { headers })\n      .subscribe(\n        response => {\n          this.levelDetails = [...this.levelDetails, ...response.transactions];\n          if (response.currentPage >= response.totalPages) {\n            this.endOfData = true;\n          }\n          this.loading = false;\n        },\n        error => {\n          console.error('Error fetching matrix summary:', error);\n          this.loading = false;\n        }\n      );\n  }\n\n  openModal(transactionId: string): void {\n    // Implement modal opening logic\n    console.log(`Open modal for transaction: ${transactionId}`);\n  }\n}\n","<p>pmf works!</p>\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,YAAY;EAQvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,SAAS,GAAG,KAAK;EAEsB;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAGC,OAAO,CAACC,KAAK,CAACF,SAAS;IACxC,IAAI,CAACG,iBAAiB,EAAE;EAC1B;EAGAC,QAAQA,CAAA;IACN,IAAKC,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACE,OAAO,IAAKC,QAAQ,CAACC,IAAI,CAACC,YAAY,IAAI,CAAC,IAAI,CAACb,OAAO,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MAC3G,IAAI,CAACH,WAAW,EAAE;MAClB,IAAI,CAACQ,iBAAiB,EAAE;;EAE5B;EAEAA,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAACN,OAAO,EAAE;MAChB;;IAGF,MAAMc,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,IAAI,CAACF,OAAO,EAAE;MACZG,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;MAClD;;IAGF,IAAI,CAAClB,OAAO,GAAG,IAAI;IAEnB,MAAMmB,OAAO,GAAG,IAAI3B,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUuB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;KACzD,CAAC;IAEF,IAAI,CAACpB,IAAI,CAACwB,GAAG,CAAM,GAAG3B,WAAW,CAAC4B,MAAM,gCAAgCP,OAAO,SAAS,IAAI,CAAChB,WAAW,UAAU,IAAI,CAACC,YAAY,EAAE,EAAE;MAAEoB;IAAO,CAAE,CAAC,CAChJG,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAAC1B,YAAY,GAAG,CAAC,GAAG,IAAI,CAACA,YAAY,EAAE,GAAG0B,QAAQ,CAACC,YAAY,CAAC;MACpE,IAAID,QAAQ,CAACzB,WAAW,IAAIyB,QAAQ,CAACE,UAAU,EAAE;QAC/C,IAAI,CAACxB,SAAS,GAAG,IAAI;;MAEvB,IAAI,CAACD,OAAO,GAAG,KAAK;IACtB,CAAC,EACDkB,KAAK,IAAG;MACND,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,IAAI,CAAClB,OAAO,GAAG,KAAK;IACtB,CAAC,CACF;EACL;EAEA0B,SAASA,CAACC,aAAqB;IAC7B;IACAV,OAAO,CAACW,GAAG,CAAC,+BAA+BD,aAAa,EAAE,CAAC;EAC7D;EAAC,QAAAE,CAAA,G;qBA3DUnC,YAAY,EAAAoC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZxC,YAAY;IAAAyC,SAAA;IAAAC,YAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAZC,GAAA,CAAAhC,QAAA,CAAAiC,MAAA,CAAgB;QAAA,UAAAV,EAAA,CAAAW,eAAA;;;;;;;QCT7BX,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,iBAAU;QAAAb,EAAA,CAAAc,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}