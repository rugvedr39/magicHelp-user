{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nexport let GiveHelpComponent = class GiveHelpComponent {\n  constructor(http) {\n    this.http = http;\n    this.transactions = [];\n    this.currentTransactionId = null;\n    this.utrNumber = '';\n  }\n  ngOnInit() {\n    this.fetchTransactions();\n  }\n  fetchTransactions() {\n    const payerId = localStorage.getItem('_id');\n    if (!payerId) {\n      console.error('PayerId not found in localStorage');\n      return;\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n    this.http.get(`${environment.apiUrl}/payments/transactions/payer/${payerId}`, {\n      headers\n    }).subscribe(response => {\n      this.transactions = response;\n    }, error => {\n      console.error('Error fetching transactions:', error);\n    });\n  }\n  openModal(transactionId) {\n    this.currentTransactionId = transactionId;\n  }\n  closeModal() {\n    this.currentTransactionId = null;\n  }\n  isPaid(status) {\n    return status === 'paid';\n  }\n  submitUtrNumber() {\n    if (this.currentTransactionId) {\n      const transactionId = this.currentTransactionId;\n      const token = localStorage.getItem('token');\n      const payload = {\n        utrNumber: this.utrNumber,\n        status: 'pending'\n      };\n      this.http.put(`${environment.apiUrl}/payments/transactions/${transactionId}`, payload, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).subscribe(response => {\n        console.log('Transaction updated successfully:', response);\n        this.fetchTransactions();\n      }, error => {\n        console.error('Error updating transaction:', error);\n      });\n    }\n  }\n};\nGiveHelpComponent = __decorate([Component({\n  selector: 'app-give-help',\n  templateUrl: './give-help.component.html',\n  styleUrls: ['./give-help.component.css']\n})], GiveHelpComponent);","map":{"version":3,"names":["HttpHeaders","Component","environment","GiveHelpComponent","constructor","http","transactions","currentTransactionId","utrNumber","ngOnInit","fetchTransactions","payerId","localStorage","getItem","console","error","headers","get","apiUrl","subscribe","response","openModal","transactionId","closeModal","isPaid","status","submitUtrNumber","token","payload","put","log","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/rugvedraikwar/Desktop/magicHelp/mlm-froentend/mlm-frontend/src/app/give-help/give-help.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-give-help',\n  templateUrl: './give-help.component.html',\n  styleUrls: ['./give-help.component.css']\n})\nexport class GiveHelpComponent implements OnInit {\n\n  transactions: any[] = [];\n  currentTransactionId: string | null = null;\n  utrNumber: string = '';\n  selectedTransaction: any;\n\n\n\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchTransactions();\n  }\n\n  fetchTransactions(): void {\n    const payerId = localStorage.getItem('_id');\n    if (!payerId) {\n      console.error('PayerId not found in localStorage');\n      return;\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n\n\n    this.http.get<any[]>(`${environment.apiUrl}/payments/transactions/payer/${payerId}`, { headers })\n      .subscribe(\n        response => {\n          this.transactions = response;\n        },\n        error => {\n          console.error('Error fetching transactions:', error);\n        }\n      );\n  }\n\n  openModal(transactionId: string): void {\n    this.currentTransactionId = transactionId;\n  }\n\n  closeModal(): void {\n    this.currentTransactionId = null;\n  }\n\n  isPaid(status: string): boolean {\n    return status === 'paid';\n  }\n\n\n  submitUtrNumber(): void {\n    if (this.currentTransactionId) {\n      const transactionId = this.currentTransactionId;\n      const token = localStorage.getItem('token');\n      const payload = {\n        utrNumber: this.utrNumber,\n        status: 'pending'\n      };\n\n      this.http.put(`${environment.apiUrl}/payments/transactions/${transactionId}`, payload, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      }).subscribe(\n        response => {\n          console.log('Transaction updated successfully:', response);\n          this.fetchTransactions();\n        },\n        error => {\n          console.error('Error updating transaction:', error);\n        }\n      );\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,QAAQ,8BAA8B;AAQnD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAU5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,oBAAoB,GAAkB,IAAI;IAC1C,KAAAC,SAAS,GAAW,EAAE;EAMiB;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,IAAI,CAACF,OAAO,EAAE;MACZG,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;MAClD;;IAGF,MAAMC,OAAO,GAAG,IAAIhB,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;KACzD,CAAC;IAGF,IAAI,CAACR,IAAI,CAACY,GAAG,CAAQ,GAAGf,WAAW,CAACgB,MAAM,gCAAgCP,OAAO,EAAE,EAAE;MAAEK;IAAO,CAAE,CAAC,CAC9FG,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAACd,YAAY,GAAGc,QAAQ;IAC9B,CAAC,EACDL,KAAK,IAAG;MACND,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACL;EAEAM,SAASA,CAACC,aAAqB;IAC7B,IAAI,CAACf,oBAAoB,GAAGe,aAAa;EAC3C;EAEAC,UAAUA,CAAA;IACR,IAAI,CAAChB,oBAAoB,GAAG,IAAI;EAClC;EAEAiB,MAAMA,CAACC,MAAc;IACnB,OAAOA,MAAM,KAAK,MAAM;EAC1B;EAGAC,eAAeA,CAAA;IACb,IAAI,IAAI,CAACnB,oBAAoB,EAAE;MAC7B,MAAMe,aAAa,GAAG,IAAI,CAACf,oBAAoB;MAC/C,MAAMoB,KAAK,GAAGf,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMe,OAAO,GAAG;QACdpB,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBiB,MAAM,EAAE;OACT;MAED,IAAI,CAACpB,IAAI,CAACwB,GAAG,CAAC,GAAG3B,WAAW,CAACgB,MAAM,0BAA0BI,aAAa,EAAE,EAAEM,OAAO,EAAE;QACrFZ,OAAO,EAAE;UAAE,eAAe,EAAE,UAAUW,KAAK;QAAE;OAC9C,CAAC,CAACR,SAAS,CACVC,QAAQ,IAAG;QACTN,OAAO,CAACgB,GAAG,CAAC,mCAAmC,EAAEV,QAAQ,CAAC;QAC1D,IAAI,CAACV,iBAAiB,EAAE;MAC1B,CAAC,EACDK,KAAK,IAAG;QACND,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,CACF;;EAEL;CAED;AA3EYZ,iBAAiB,GAAA4B,UAAA,EAL7B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW/B,iBAAiB,CA2E7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}